name: Download, repack and release go2rtc

on:
  push:
    branches:
      - "main"
  workflow_dispatch:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '0 */3 * * *'

jobs:
  build:
    name: Download go2rtc and create a .zip release
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - id: get-go2rtc-version
        name: Get latest go2rtc version
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: AlexxIT
          repo: go2rtc
      - id: download-go2rtc
        name: Download latest go2rtc version
        run: |
          curl -L -o go2rtc_linux_amd64 https://github.com/AlexxIT/go2rtc/releases/download/${{ steps.get-go2rtc-version.outputs.release }}/go2rtc_linux_amd64
          curl -L -o go2rtc_linux_arm https://github.com/AlexxIT/go2rtc/releases/download/${{ steps.get-go2rtc-version.outputs.release }}/go2rtc_linux_arm
          curl -L -o go2rtc_linux_arm64 https://github.com/AlexxIT/go2rtc/releases/download/${{ steps.get-go2rtc-version.outputs.release }}/go2rtc_linux_arm64
          curl -L -o go2rtc_linux_armv6 https://github.com/AlexxIT/go2rtc/releases/download/${{ steps.get-go2rtc-version.outputs.release }}/go2rtc_linux_armv6
      - id: create-release-info
        name: Create release-info.json file
        run: |
          echo -e "{\"project_name\": \"go2rtc (via go2moon)\",\"project_owner\": \"AlexxIT / jeikobu__\",\"version\":\"${{ steps.get-go2rtc-version.outputs.release }}\"}" > release-info.json
      - id: create-release-zip
        name: Create release zip file
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r go2rtc.zip go2rtc_linux_amd64 go2rtc_linux_arm go2rtc_linux_arm64 go2rtc_linux_armv6 release-info.json
      - name: Upload binaries to release
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: go2rtc.zip
          asset_name: go2rtc.zip
          tag: ${{ steps.get-go2rtc-version.outputs.release }}
          overwrite: false
          body: ${{ steps.get-go2rtc-version.outputs.description }}"
      - name: Exit gracefully if tag exists
        id: exit-gracefully-on-tag-exists
        if: ${{ failure() }}
        run: |
          echo ${{steps.upload-release-asset.conclusion}}

